Бинарное дерево. 
Бинарное дерево имеет рекурсивную структуру, что предполагает использование рекурсивных алгоритмов для манипулирования деревьями. 
Каждое дерево состоит из вершин и связей между этими вершинными. Если вершина X ссылается на вершину Y, тогда вершина Y является потомком для вершины X, а X предком для вершины Y. Узлы, не имеющие дочерних узлов, называются листьями. 
Каждая вершина бинарного дерева имеет следующую структуру: информационное поле, указатель на правое поддерево, указатель на левое поддерево.
Мною выпонены функции:
  -Добавления нового элемента дерева.
  -Поиск по ключу.
  -Печати дерева (прямой обход).
  -Удаления по ключу (дочерние функции: нахождение самого левого и самого правого элемента).

Также функцию печати дерева можно было выполнить через  симметрический или обратный обход.
Поясню.
Обход в прямом порядке:
  1)Посетили узел
  2)Обошли левое поддерево    
  3)Обошли правое поддерево   
Симметрический обход:
  1)Обошли левое поддерево 
  2)Посетили узел    
  3)Обошли правое поддерево   
Обратный обход:
  1)Обошли левое поддерево 
  2)Обошли правое поддерево  
  3)Посетили узел  

Ещё в работе с бинарным деревом,можно было реализовать такие дополнительные функции:
  -Определение кол-ва узлов дерева, где: 
  узел (node) – это точка, где может возникнуть ветвь.
  -Определение кол-ва листьев дерева, где:
  лист (leaf) – узел, из которого не выходят ветви, т.е. не имеющий поддеревьев. 
  -Определение макс. глубины дерева, где:
  глубина (высота) дерева – максимальная глубина всех узлов;
  глубина (depth) узла – количество его предков плюс единица. 
